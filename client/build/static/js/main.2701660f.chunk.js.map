{"version":3,"sources":["utils/auth.js","components/Header/index.js","components/Footer/index.js","utils/mutations.js","utils/queries.js","components/HobbyForm/index.js","components/CategoryForm/index.js","components/CategoryList/index.js","pages/Home.js","pages/Signup.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Header","_jsx","className","children","_jsxs","Link","to","Auth","loggedIn","_Fragment","getProfile","data","username","onClick","event","preventDefault","logout","Footer","useLocation","navigate","useNavigate","pathname","role","LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","ADD_USER","_templateObject3","ADD_CATEGORY","_templateObject4","ADD_HOBBY","_templateObject5","QUERY_CATEGORY","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","QUERY_CATEGORIES","HobbyForm","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","selectedCategory","setSelectedCategory","_useState7","_useState8","characterCount","setCharacterCount","_useQuery","useQuery","loading","categories","_useMutation","useMutation","update","cache","_ref","addHobby","updatedCategories","readQuery","query","map","category","_id","_objectSpread","hobbies","concat","_toConsumableArray","writeQuery","e","console","error","_useMutation2","_useMutation2$","mutationError","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","variables","categoryId","t0","stop","_x","apply","arguments","handleChange","_event$target","target","name","length","options","label","onSubmit","onChange","Select","isClearable","type","disabled","message","CategoryForm","addCategory","CategoryList","Home","style","border","Signup","email","password","formState","setFormState","addUser","_defineProperty","handleFormSubmit","_yield$addUser","_data","log","sent","login","placeholder","cursor","Login","props","_yield$login","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2701660f.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n\n}\n\nexport default new AuthService();","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n            <h1 className=\"m-0\">Hobbies</h1>\n          </Link>\n          <p className=\"m-0\">Get into the mind of a programmer.</p>\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate(-1)}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h4>\n          Hobbiest Place on Earth{' '}\n          <span\n            className=\"emoji\"\n            role=\"img\"\n            aria-label=\"heart\"\n            aria-hidden=\"false\"\n          >\n            ❤️\n          </span>{' '}\n          by the Team 7.\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_CATEGORY = gql`\n  mutation addCategory ( $title: String!, $description: String!){\n    addCategory ( title: $title, description: $description) {\n      _id\n      title\n      description\n      hobby {\n        _id\n        title\n      }\n      user {\n        _id\n      }\n    }\n    \n  }\n`;\n\nexport const ADD_HOBBY = gql`\nmutation addHobby ( $title: String!, $description: String!){\n  addHobby ( title: $title, description: $description) {\n    title\n    description\n    categories {\n      _id\n      title\n    }\n    users {\n      _id\n    }\n  }\n  \n}\n`;\n\nexport const ADD_COMMENT = gql`\nmutation addComment ( $content: String! ){\n  addComment ( content: $content ) {\n    content\n    hobbies {\n      _id\n      title\n    }\n    users {\n      _id\n    }\n  }\n  \n}\n`;\n\nexport const ADD_HOBBY_LIKE = gql`\nmutation addHobbyLike ($_id: String!, $likes: Int!){\n  addHobbyLike ( likes: $likes ) {\n    likes\n  }\n}\n`;\n\nexport const ADD_COMMENT_LIKE = gql`\nmutation addCommentLike ($_id: String!, $likes: Int!){\n  addCommentLike ( likes: $likes ) {\n    likes\n  }\n}\n`;\n\nexport const ADD_HOBBY_DISLIKE = gql`\nmutation addHobbyDislike ($_id: String!, $dislikes: Int!){\n  addHobbyLike ( dislikes: $dislikes ) {\n    dislikes\n  }\n  \n}\n`;\n\nexport const ADD_COMMENT_DISLIKE = gql`\nmutation addCommentDislike ($_id: String!, $dislikes: Int!){\n  addCommentLike ( dislikes: $dislikes ) {\n    dislikes\n  }\n  \n}\n`;\n\n","import { gql } from '@apollo/client';\n\n\nexport const QUERY_USER = gql`\n  query users{\n    user {\n      _id\n      username\n      email\n      categories {\n        _id\n        title\n        description\n        hobbies {\n          _id\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORY = gql`\n  query category($category: ID) {\n    category(categoryId: $category) {\n      _id\n      title\n      description\n      hobbies {\n        _id\n        title\n        description\n        hobbies\n      }\n    }  \n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  query categories {\n    categories {\n      _id\n      title\n      description\n      hobbies{\n        _id\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_COMMENTS = gql`\n  query comments{\n    comments {\n      _id\n      content\n      user {\n        username\n      }\n      hobby { category }\n    }\n  }\n`;\n\n\n\nexport const QUERY_ALL_HOBBIES = gql`\n query hobbies{\n    hobbies {\n      _id\n      title\n      categories {\n        title\n      }\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_HOBBY = gql`\n  query hobby($hobbyId: ID!) {\n    hobby(hobbyId: $hobbyId) {\n      _id\n      title\n      categories {\n        title\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      categories {\n        _id\n        title\n        hobby {\n          _id\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Select from 'react-select';\nimport { ADD_HOBBY } from '../../utils/mutations';\nimport { QUERY_CATEGORIES, QUERY_CATEGORY } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst HobbyForm = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const { loading, data } = useQuery(QUERY_CATEGORIES);\n\n  const categories = data?.categories || [];\n\n  const [addHobby, { loading: Loading, error: mutationError }] = useMutation(ADD_HOBBY, {\n    update(cache, { data: { addHobby } }) {\n      try{\n        \n        const { categories } = cache.readQuery({ query: QUERY_CATEGORY });\n        const updatedCategories = categories.map((category) => {\n          if (category._id === addHobby.categories[0]._id){\n            return {\n              ...category,\n              hobbies: [...category.hobbies, addHobby],\n            };\n          } else {\n            return category;\n          }\n        });\n        cache.writeQuery({\n          query: QUERY_CATEGORIES,\n          data: { categories: updatedCategories}\n        });\n      } catch (e) {\n        console.error(e)\n      }\n    },\n });\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await addHobby({\n        variables: {\n          title,\n          description,\n          categoryId: selectedCategory.value,\n        },\n      });\n      \n      setTitle('');\n      setDescription('');\n      setSelectedCategory(null);\n\n    } catch (error) {\n      console.error('Error creating hobby:', error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if(name === 'description' && value.length <= 280) {\n      setDescription(value);\n    } else {\n      setTitle(value);\n    }\n    setCharacterCount(title.length + description.length);\n  };\n\n  const options = categories.map((category) => ({\n    value: category._id,\n    label: category.title,\n  }))\n\n  return (\n    <div>\n      <h3>Add a New Hobby</h3>\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || mutationError ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:\n              <input\n              value={title} \n              onChange={handleChange}\n              />\n            </label>\n            <label>\n              Description:\n              <input\n                name='description'\n                value={description} \n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              Category:\n              <Select\n                options={options}\n                value={selectedCategory}\n                onChange={setSelectedCategory}\n                isClearable \n              />\n            </label>\n            <button type=\"submit\" disabled={!title || !description}>\n              {loading ? 'Creating...' : 'Create Hobby'}\n            </button>\n            {mutationError && (\n              <div className='col-12 my-3 bg-danger text-white p-3'>\n                Error creating hobby: {mutationError.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to add a Hobby. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default HobbyForm;\n","\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useMutation } from '@apollo/client';\nimport { ADD_CATEGORY } from '../../utils/mutations';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport Auth from '../../utils/auth';\n\nconst CategoryForm = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addCategory, { loading, error}] = useMutation(ADD_CATEGORY, {\n    update(cache, { data: { addCategory } }) {\n      try {\n        const { categories } = cache.readQuery({ query: QUERY_CATEGORIES })\n        cache.writeQuery({\n          query: QUERY_CATEGORIES,\n          data: { categories: [...categories, addCategory] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n  \n    if (name === 'description') {\n      setDescription(value);\n    } else {\n      setTitle(value);\n    }\n\n    setCharacterCount(title.length + description.length);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addCategory ({\n        variables: {\n          title,\n          description,\n        },\n      });\n\n      setTitle('');\n      setDescription('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return(\n    <div>\n      <h3>Add a New Category</h3>\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:\n              <input\n              value={title} \n              onChange={handleChange}\n              />\n            </label>\n            <label>\n              Description:\n              <input\n                name='description'\n                value={description} \n                onChange={handleChange}\n              />\n            </label>\n            <button type=\"submit\" disabled={!title || !description}>\n              {loading ? 'Creating...' : 'Create Category'}\n            </button>\n            {error && (\n              <div className='col-12 my-3 bg-danger text-white p-3'>\n                Error creating Category: {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to add a Category. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default CategoryForm\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CategoryList = ({\n  categories,\n  title,\n  description,\n//   showTitle = true,\n}) => {\n  if (!categories.length) {\n    return <h3>No Categories Yet</h3>;\n  }\n\n  return (\n    <div>\n      { <h3>{title}</h3> && <p>{description}</p>}\n      {categories &&\n        categories.map((category) => (\n          <div key={category._id} className=\"card mb-3\">\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n            </h4>\n            <div className=\"card-body bg-light p-2\">\n              <p>{category.title}</p>\n              <p>{category.description}</p>\n            </div>\n            <Link\n              className=\"btn btn-primary btn-block btn-squared\"\n              to={`/categories/${category._id}`}\n            >\n              Join the discussion on this category.\n            </Link>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default CategoryList;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport HobbyForm from '../components/HobbyForm';\n// import { Category } from '../../../server/models';\nimport CategoryForm from '../components/CategoryForm';\nimport CategoryList from '../components/CategoryList';\nimport { QUERY_CATEGORIES } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_CATEGORIES);\n  const categories = data?.categories || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          <HobbyForm />\n        </div>\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          <CategoryForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <CategoryList\n            categories={categories}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n    \n        try {\n          const { data } = await addUser({\n            variables: { ...formState },\n          });\n    \n          Auth.login(data.addUser.token);\n        } catch (e) {\n          console.error(e);\n        }\n      };    \n\n      return (\n        <main className=\"flex-row justify-center mb-4\">\n          <div className=\"col-12 col-lg-10\">\n            <div className=\"card\">\n              <h4 className=\"text-bg-primary p-3\">Sign Up</h4>\n              <div className=\"card-body\">\n                {data ? (\n                  <p>\n                    Success! You may now head{' '}\n                    <Link to=\"/\">back to the homepage.</Link>\n                  </p>\n                ) : (\n                  <form onSubmit={handleFormSubmit}>\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your username\"\n                      name=\"username\"\n                      type=\"text\"\n                      value={formState.name}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formState.email}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      value={formState.password}\n                      onChange={handleChange}\n                    />\n                    <button\n                      className=\"btn btn-block btn-primary\"\n                      style={{ cursor: 'pointer' }}\n                      type=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  </form>\n                )}\n    \n                {error && (\n                  <div className=\"my-3 p-3 bg-danger text-white\">\n                    {error.message}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      );\n};\n\nexport default Signup;\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"text-bg-primary p-3\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\n// import SingleHobby from './pages/SingleHobby';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n// import Hobby from './pages/Hobbies';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('id_token');\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div className=\"flex-column justify-flex-start min-100-vh\">\n                    <Header />\n                    <div className=\"container\">\n                        <Routes>\n                            <Route\n                                path=\"/\"\n                                element={<Home />}\n                            />\n                            <Route\n                                path=\"/login\"\n                                element={<Login />}\n                            />\n                            <Route\n                                path=\"/signup\"\n                                element={<Signup />}\n                        \n                            />\n                            {/* <Route\n                                path=\"/hobbies/:hobbyId\"\n                                element={<SingleHobby />}\n\n                            />\n                            <Route\n                                path=\"/hobbies\"\n                                element={<Hobby />}\n\n                            /> */}\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n"],"sourceRoot":""}