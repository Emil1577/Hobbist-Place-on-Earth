{"version":3,"sources":["utils/auth.js","components/Header/index.js","components/Footer/index.js","pages/Home.js","utils/mutations.js","pages/Signup.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Header","_jsx","className","children","_jsxs","Link","to","Auth","loggedIn","_Fragment","getProfile","data","username","onClick","event","preventDefault","logout","Footer","useLocation","navigate","useNavigate","pathname","role","Home","style","border","LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","ADD_USER","_templateObject3","Signup","_templateObject4","_templateObject5","_useState","useState","email","password","_useState2","_slicedToArray","formState","setFormState","_useMutation","useMutation","_useMutation2","addUser","_useMutation2$","error","handleChange","_event$target","target","name","_objectSpread","_defineProperty","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$addUser","_data","wrap","_context","prev","next","console","log","variables","sent","login","t0","stop","_x","apply","arguments","onSubmit","placeholder","type","onChange","cursor","message","Login","props","_yield$login","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","concat","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0bc8591.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n\n}\n\nexport default new AuthService();","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n            <h1 className=\"m-0\">Hobbies</h1>\n          </Link>\n          <p className=\"m-0\">Get into the mind of a programmer.</p>\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate(-1)}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h4>\n          Hobbiest Place on Earth{' '}\n          <span\n            className=\"emoji\"\n            role=\"img\"\n            aria-label=\"heart\"\n            aria-hidden=\"false\"\n          >\n            ❤️\n          </span>{' '}\n          by the Team 7.\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\n// import { QUERY_CATEGORY } from '../utils/queries';\n\nconst Home = () => {\n  // const { loading, data } = useQuery(QUERY_CATEGORY);\n  // const category = data?.categories || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n\n        </div>\n        <div>testing</div>\n        <div className=\"col-12 col-md-8 mb-3\">\n\n            <div>Loading...</div>\n          \n            <Footer\n            />\n          \n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_CATEGORY = gql`\n  mutation addCategory ( $title: String!, $description: String!){\n    addCategory ( title: $title, description: $description) {\n      _id\n      title\n      description\n      hobby {\n        _id\n        title\n      }\n      user {\n        _id\n      }\n    }\n    \n  }\n`;\n\nexport const ADD_HOBBY = gql`\nmutation addHobby ( $title: String!, $description: String!){\n  addHobby ( title: $title, description: $description) {\n    title\n    description\n    category {\n      _id\n      title\n    }\n    user {\n      _id\n    }\n  }\n  \n}\n`;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n    \n        try {\n          const { data } = await addUser({\n            variables: { ...formState },\n          });\n    \n          Auth.login(data.addUser.token);\n        } catch (e) {\n          console.error(e);\n        }\n      };    \n\n      return (\n        <main className=\"flex-row justify-center mb-4\">\n          <div className=\"col-12 col-lg-10\">\n            <div className=\"card\">\n              <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n              <div className=\"card-body\">\n                {data ? (\n                  <p>\n                    Success! You may now head{' '}\n                    <Link to=\"/\">back to the homepage.</Link>\n                  </p>\n                ) : (\n                  <form onSubmit={handleFormSubmit}>\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your username\"\n                      name=\"username\"\n                      type=\"text\"\n                      value={formState.name}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formState.email}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      value={formState.password}\n                      onChange={handleChange}\n                    />\n                    <button\n                      className=\"btn btn-block btn-primary\"\n                      style={{ cursor: 'pointer' }}\n                      type=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  </form>\n                )}\n    \n                {error && (\n                  <div className=\"my-3 p-3 bg-danger text-white\">\n                    {error.message}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      );\n};\n\nexport default Signup;\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\n// import SingleHobby from './pages/SingleHobby';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n// import Hobby from './pages/Hobbies';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('id_token');\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div className=\"flex-column justify-flex-start min-100-vh\">\n                    <Header />\n                    <div className=\"container\">\n                        <Routes>\n                            <Route\n                                path=\"/\"\n                                element={<Home />}\n                            />\n                            <Route\n                                path=\"/login\"\n                                element={<Login />}\n                            />\n                            <Route\n                                path=\"/signup\"\n                                element={<Signup />}\n                        \n                            />\n                            {/* <Route\n                                path=\"/hobbies/:hobbyId\"\n                                element={<SingleHobby />}\n\n                            />\n                            <Route\n                                path=\"/hobbies\"\n                                element={<Hobby />}\n\n                            /> */}\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n"],"sourceRoot":""}