{"version":3,"sources":["utils/auth.js","components/Header /index.js","components/Footer/index.js","pages/Home.js","App.js","utils/queries.js","reportWebVitals.js","index.js"],"names":["AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Header","_jsx","className","children","_jsxs","Link","to","Auth","loggedIn","_Fragment","getProfile","data","username","onClick","event","preventDefault","logout","Footer","useLocation","navigate","useNavigate","pathname","role","Home","style","border","httpLink","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","createHttpLink","uri","authLink","setContext","_","_ref","headers","_objectSpread","authorization","concat","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ac9a54c.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n            <h1 className=\"m-0\">Hobbies</h1>\n          </Link>\n          <p className=\"m-0\">Get into the mind of a programmer.</p>\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate(-1)}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h4>\n          Hobbiest Place on Earth{' '}\n          <span\n            className=\"emoji\"\n            role=\"img\"\n            aria-label=\"heart\"\n            aria-hidden=\"false\"\n          >\n            ❤️\n          </span>{' '}\n          by the Team 7.\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport Header from '../components/Header ';\nimport Footer from '../components/Footer';\n\n// import { QUERY_CATEGORY } from '../utils/queries';\n\nconst Home = () => {\n  // const { loading, data } = useQuery(QUERY_CATEGORY);\n  // const category = data?.categories || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          <Header />\n        </div>\n        <div>testing</div>\n        <div className=\"col-12 col-md-8 mb-3\">\n\n            <div>Loading...</div>\n          \n            <Footer\n            />\n          \n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\n// import Signup from './pages/Signup';\n// import Login from './pages/Login';\nimport SingleHobby from './pages/SingleHobby';\nimport Header from './components/Header ';\nimport Footer from './components/Footer';\n// import Hobby from './pages/Hobbies';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('id_token');\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div className=\"flex-column justify-flex-start min-100-vh\">\n                    <Header />\n                    <div className=\"container\">\n                        <Routes>\n                            <Route\n                                path=\"/\"\n                                element={<Home />}\n                            />\n                            {/* <Route\n                                path=\"/login\"\n                                element={<Login />}\n                            />\n                            <Route\n                                path=\"/signup\"\n                                element={<Signup />}\n                        \n                            />\n                            <Route\n                                path=\"/hobbies/:hobbyId\"\n                                element={<SingleHobby />}\n\n                            />\n                            <Route\n                                path=\"/hobbies\"\n                                element={<Hobby />}\n\n                            /> */}\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;","import { gql } from '@apollo/client';\n\n\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      categories {\n        _id\n        title\n        hobby {\n          _id\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORY = gql`\n  query getCategory($category: ID) {\n    hobbies {\n      _id\n      title\n      description\n      hobbies\n    }\n  }\n`;\n\nexport const QUERY_ALL_COMMENTS = gql`\n  {\n    comments {\n      _id\n      content\n      user {\n        firstname\n      }\n      hobby { category }\n    }\n  }\n`;\n\n\n\nexport const QUERY_ALL_HOBBIES = gql`\n  {\n    hobbies {\n      _id\n      title\n      category {\n        title\n      }\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_HOBBY = gql`\n  query getSingleHobby($hobbyId: ID!) {\n    hobby(hobbytId: $hobbyId) {\n      _id\n      title\n      category {\n        title\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      firstname\n      lastname\n      categories {\n        _id\n        title\n        hobby {\n          _id\n          title\n          description\n        }\n      }\n    }\n  }\n`;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}